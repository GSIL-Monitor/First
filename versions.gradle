/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.arch_core = "1.1.1"
versions.room = "1.1.1"
versions.lifecycle = "1.1.1"
versions.support = "27.1.1"
versions.mulitdex = "1.0.1"
versions.dagger = "2.15"
versions.junit = "4.12"
versions.espresso = "3.0.1"
versions.retrofit = "2.3.0"
versions.okhttp_logging_interceptor = "3.9.0"
versions.mockwebserver = "3.8.1"
versions.apache_commons = "2.5"
versions.mockito = "2.7.19"
versions.mockito_all = "1.10.19"
versions.dexmaker = "2.2.0"
versions.constraint_layout = "1.1.2"
versions.glide = "4.7.1"
versions.timber = "4.5.1"
versions.android_gradle_plugin = '3.0.1'
versions.google_service = '4.0.0'
versions.gson = "2.8.0"
versions.play_services_auth = "15.0.1"
versions.installreferrer = "1.0"
versions.firbase_message = "17.0.0"
versions.firbase_core = "16.0.0"
versions.rxjava2 = "2.2.0"
versions.rx_android = "2.0.1"
versions.atsl_runner = "1.0.1"
versions.atsl_rules = "1.0.1"
versions.hamcrest = "1.3"
versions.kotlin = "1.2.50"
versions.paging = "1.0.1"
versions.work = "1.0.0-alpha04"
versions.navigation = "1.0.0-alpha03"
versions.refresh = "1.1.0-alpha-7"
versions.leakcanary_android = "1.5.4"
versions.ok_http = "3.10.0.1"
versions.ok_io = "1.14.0"
versions.fresco = "1.9.0"
//bytedance
versions.bytedance_http = "1.0.1"
versions.monitor = "4.3.2"
versions.encrypt = "1.1.0"
versions.network_ok3 = "1.5.6.8"
versions.ttnet = "1.8.5.9"
versions.cronet = "1.4.9.8"
versions.network = "1.5.1.9"
versions.utility = "1.2.4"
ext.versions = versions
def deps = [:]

def build_versions = [:]
build_versions.min_sdk = 17
build_versions.target_sdk = 26
build_versions.build_tools = "27.0.3"
ext.build_versions = build_versions

def support = [:]
support.annotations = "com.android.support:support-annotations:$versions.support"
support.app_compat = "com.android.support:appcompat-v7:$versions.support"
support.recyclerview = "com.android.support:recyclerview-v7:$versions.support"
support.cardview = "com.android.support:cardview-v7:$versions.support"
support.design = "com.android.support:design:$versions.support"
support.v4 = "com.android.support:support-v4:$versions.support"
support.core_utils = "com.android.support:support-core-utils:$versions.support"
support.percent = "com.android.support:percent:$versions.support"
support.vector_drawable = "com.android.support:support-vector-drawable:$versions.support"
support.multidex = "com.android.support:multidex:$versions.mulitdex"
support.constraint_layout = "com.android.support.constraint:constraint-layout:$versions.constraint_layout"
deps.support = support

def room = [:]
room.runtime = "android.arch.persistence.room:runtime:$versions.room"
room.compiler = "android.arch.persistence.room:compiler:$versions.room"
room.rxjava2 = "android.arch.persistence.room:rxjava2:$versions.room"
room.testing = "android.arch.persistence.room:testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "android.arch.lifecycle:runtime:$versions.lifecycle"
lifecycle.extensions = "android.arch.lifecycle:extensions:$versions.lifecycle"
lifecycle.java8 = "android.arch.lifecycle:common-java8:$versions.lifecycle"
lifecycle.compiler = "android.arch.lifecycle:compiler:$versions.lifecycle"
lifecycle.livedata = "android.arch.lifecycle:livedata-core:1.1.1"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.testing = "android.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit

def espresso = [:]
espresso.core = "com.android.support.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "com.android.support.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "com.android.support.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.runner = "com.android.support.test:runner:$versions.atsl_runner"
atsl.rules = "com.android.support.test:rules:$versions.atsl_runner"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"

deps.kotlin = kotlin
deps.paging = "android.arch.paging:runtime:$versions.paging"

def work = [:]
work.runtime = "android.arch.work:work-runtime:$versions.work"
work.testing = "android.arch.work:work-testing:$versions.work"
work.firebase = "android.arch.work:work-firebase:$versions.work"
work.runtime_ktx = "android.arch.work:work-runtime-ktx:$versions.work"
deps.work = work

def navigation = [:]
navigation.runtime = "android.arch.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "android.arch.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "android.arch.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "android.arch.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.safe_args_plugin = "android.arch.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
navigation.testing_ktx = "android.arch.navigation:navigation-testing-ktx:$versions.navigation"
deps.navigation = navigation

def google = [:]
google.service_plugin = "com.google.gms:google-services:$versions.google_service"
google.play_services_auth = "com.google.android.gms:play-services-auth:$versions.play_services_auth"
google.firbase_message = "com.google.firebase:firebase-messaging:$versions.firbase_message"
google.firbase_core = "com.google.firebase:firebase-core:$versions.firbase_core"
google.referrer = "com.android.installreferrer:installreferrer:$versions.installreferrer"
google.flex_box = "com.google.android:flexbox:0.3.2"
google.gson = "com.google.code.gson:gson:$versions.gson"
deps.google = google

def facebook = [:]
facebook.login = "com.facebook.android:facebook-login:4.32.0"
facebook.fresco_gif = "com.facebook.fresco:animated-gif:$versions.fresco"
facebook.fresco_webp = "com.facebook.fresco:animated-webp:$versions.fresco"
facebook.fresco_webp_support = "com.facebook.fresco:webpsupport:$versions.fresco"
facebook.fresco = "com.facebook.fresco:fresco:$versions.fresco"
facebook.fresco_ok_http = "com.facebook.fresco:imagepipeline-okhttp3:$versions.fresco"
deps.facebook = facebook

def squareup = [:]
squareup.leakcanary_android = "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary_android"
squareup.leakcanary_android_no_op = "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakcanary_android"
squareup.ok_http = "com.squareup.okhttp3:okhttp:$versions.ok_http"
squareup.ok_io = "com.squareup.okio:okio:$versions.ok_io"
squareup.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
squareup.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"
deps.squareup = squareup

def bytedance = [:]
bytedance.http = "com.bytedance.components:http:$versions.bytedance_http"
bytedance.monitor = "com.bytedance.frameworks.core:commonmonitor:$versions.monitor"
bytedance.npth = "com.bytedance.common_business:npth:1.2.2"
bytedance.utility = "com.bytedance.frameworks.baselib:utility:$versions.utility"
bytedance.applog = "com.bytedance.common_business:applog-global:2.5.4.8"
bytedance.applog_tool = "com.bytedance.article.common:applog-toolkit:1.1.6"
bytedance.cronet = "com.bytedance.frameworks.baselib:network-cronet:$versions.cronet"
bytedance.cronet_lib = "org.chromium.net:cronet:1.1.10"
bytedance.image = "com.bytedance.components:image:1.0.5"
bytedance.download = "com.bytedance.ies.social.base:downloader:1.0.54.3"
bytedance.impression = "com.bytedance.article.common:impression:1.2.2"
bytedance.mvp = "com.bytedance.frameworks.mvp:mvp_app:1.2.7"
bytedance.message_bus = "com.bytedance.frameworks.core:messagebus:1.0.2"
bytedance.ttnet="com.bytedance.frameworks.baselib:ttnet:$versions.ttnet"
bytedance.launch_crash = "com.bytedance.frameworks.core:launchcrash:1.0.7"
bytedance.player = "com.ss.ttm:player:2.8.1.103"
bytedance.video_engine = "com.ss.ttm:ttvideoengine:1.9.0.35"
bytedance.push_daemon = "com.bytedance.common:pushdaemon:1.1.1"
bytedance.push_common_lib = "com.bytedance.common:push_common_lib_i18n:1.0.8"
bytedance.push_i18n = "com.bytedance.common:push_i18n:2.0.23"
bytedance.push_3rd = "com.bytedance.common:push-3rd_i18n:2.1.19"
bytedance.push_fcm = "com.bytedance.common:push-fcm_i18n:2.1.20"
bytedance.receiver = "com.bytedance.common:push-static-receivers_i18n:2.1.17"

deps.bytedance = bytedance

def refresh = [:]
refresh.layout = "com.scwang.smartrefresh:SmartRefreshLayout:$versions.refresh"
refresh.header = "com.scwang.smartrefresh:SmartRefreshHeader:$versions.refresh"
deps.refresh = refresh

//其他三方库
deps.lottie = "com.airbnb.android:lottie:2.2.5"
deps.permission = "com.mylhyl:acp:1.2.0"
deps.appflyer = "com.appsflyer:af-android-sdk:4.8.12@aar"
deps.swipe_layout = "com.daimajia.swipelayout:library:1.2.0@aar"
deps.dragger_recycleview = "com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.40"
deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.stickheader = "com.brandongogetap:stickyheaders:0.5.0"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.sqlite_debug = "com.amitshekhar.android:debug-db:1.0.3"
deps.fabric = 'io.fabric.tools:gradle:1.25.1'
deps.crashlytics = 'com.crashlytics.sdk.android:crashlytics:2.9.4@aar'
deps.circularProgress = 'com.mikhaellopez:circularprogressbar:2.0.0'
ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.maven { url 'https://maven.byted.org/nexus/content/repositories/ss_app_android' }
    handler.maven { url "http://maven.byted.org/nexus/content/repositories/ugc_android/" }
    handler.maven { url "http://maven.byted.org/nexus/content/repositories/ttplayer/" }
    handler.maven { url 'https://maven.byted.org/nexus/content/repositories/central' }
    handler.maven { url "https://jitpack.io" }
    handler.maven { url 'https://maven.fabric.io/public' }
    handler.google()
    handler.jcenter()
}

ext.addRepos = this.&addRepos
